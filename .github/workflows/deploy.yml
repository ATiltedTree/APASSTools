name: Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  prepare-release:
    name: Setup | Build

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

        include:
          - os: ubuntu-latest
            image-magick: ""
          - os: windows-latest
            image-magick: choco install imagemagick --yes
          - os: macos-latest
            image-magick: brew install imagemagick

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Cache
        id: cache
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache
      - name: Setup | Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache.outputs.cache-hit }}
      - name: Setup | ImageMagick
        run: ${{ matrix.image-magick }}
      - name: Build | Configure
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: Build | Compile
        run: |
          cd build
          cmake --build . --config Release
      - name: Build | Package
        run: |
          cd build
          cmake --build . --config Release --target package
      - name: Post Setup | Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APASSTools-${{ runner.os }}
          path: build/APASSTools-*

  github-release:
    name: Deploy | Github
    runs-on: ubuntu-latest
    needs: prepare-release
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Setup | Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Setup | Artifacts
        uses: actions/download-artifact@v2
      - name: Setup | Hash
        run: for file in APASSTools-*/APASSTools-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done
      - name: Setup | Changelog
        run: |
          # Temporary fix for https://github.com/actions/setup-go/issues/14
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u github.com/git-chglog/git-chglog/cmd/git-chglog
          git-chglog -c .chglog/config.yml $(git describe --tags) > RELEASE.md
      - name: Deploy | Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: RELEASE.md
          files: |
            APASSTools-*/APASSTools-*
